% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitted.R
\name{fitted.dynamitefit}
\alias{fitted.dynamitefit}
\title{Extract Fitted Values of a Dynamite Model}
\usage{
\method{fitted}{dynamitefit}(object, n_draws = NULL, ...)
}
\arguments{
\item{object}{[\code{dynamitefit}]\cr The model fit object.}

\item{n_draws}{[\code{integer(1)}]\cr Number of posterior samples to use,
default is \code{NULL} which uses all samples.}

\item{...}{Ignored.}
}
\description{
Note that these are conditional on the observed data i.e., we don't
simulate new lagged values for covariates, so we underestimate the
uncertainty. It is typically better to use predict with \code{type = "mean"}.
These fitted value are mostly useful only for studying one-step ahead
estimates.
}
\examples{
fitted(gaussian_example_fit, n_draws = 2L)
\dontrun{
set.seed(1)
fit <- dynamite(obs(LakeHuron ~ 1, "gaussian") + lags(),
  data = data.frame(LakeHuron, time = seq_len(length(LakeHuron)), id = 1),
  "id", "time", chains = 1, refresh = 0)

# One-step ahead samples (fitted values) from the posterior
# (first time point is fixed due to lag in the model):
library(ggplot2)
fitted(fit) |>
  dplyr::filter(time > 2) |>
  ggplot(aes(time, LakeHuron_fitted, group = .draw)) +
  geom_line(alpha = 0.5) +
  # observed values
  geom_line(aes(y = LakeHuron), colour = "tomato") +
  theme_bw()

# Posterior predictive distribution given the first time point:
predict(fit, type = "mean") |>
  dplyr::filter(time > 2) |>
  ggplot(aes(time, LakeHuron_mean, group = .draw)) +
  geom_line(alpha = 0.5) +
  # observed values
  geom_line(aes(y = LakeHuron), colour = "tomato") +
  theme_bw()
}
}
