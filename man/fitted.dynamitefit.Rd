% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitted.R
\name{fitted.dynamitefit}
\alias{fitted.dynamitefit}
\title{Extract Fitted Values of a Dynamite Model}
\usage{
\method{fitted}{dynamitefit}(object, newdata = NULL, n_draws = NULL, ...)
}
\arguments{
\item{object}{[\code{dynamitefit}]\cr The model fit object.}

\item{newdata}{[\code{data.frame}]\cr Data used in predictions.
If \code{NULL} (default), the data used in model estimation is used for
predictions as well,
There should be no new time points that were not present in the data that
were used to fit the model, and no new group levels can be included.}

\item{n_draws}{[\code{integer(1)}]\cr Number of posterior samples to use,
default is \code{NULL} which uses all samples.}

\item{...}{Ignored.}
}
\description{
Note that these are conditional on the observed data in \code{newdata},
i.e., these are one-step estimates E(y_t|y_t-1,...,y_1). Often
\link{predict.dynamitefit} is what you want.
}
\examples{
fitted(gaussian_example_fit, n_draws = 2L)
\dontrun{
set.seed(1)
fit <- dynamite(
  dformula = obs(LakeHuron ~ 1, "gaussian") + lags(),
  data = data.frame(LakeHuron, time = seq_len(length(LakeHuron)), id = 1),
  group = "id",
  time = "time",
  chains = 1,
  refresh = 0
)

# One-step ahead samples (fitted values) from the posterior
# (first time point is fixed due to lag in the model):
library(ggplot2)
fitted(fit) |>
  dplyr::filter(time > 2) |>
  ggplot(aes(time, LakeHuron_fitted, group = .draw)) +
  geom_line(alpha = 0.5) +
  # observed values
  geom_line(aes(y = LakeHuron), colour = "tomato") +
  theme_bw()

# Posterior predictive distribution given the first time point:
predict(fit, type = "mean") |>
  dplyr::filter(time > 2) |>
  ggplot(aes(time, LakeHuron_mean, group = .draw)) +
  geom_line(alpha = 0.5) +
  # observed values
  geom_line(aes(y = LakeHuron), colour = "tomato") +
  theme_bw()
}
}
